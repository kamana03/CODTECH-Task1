Using python i have created the vulnerability scanning tool 

1. `socket`: To scan open ports.
2. `requests`: To fetch headers and banners from a website.
3. `nmap`: A powerful tool for network discovery and vulnerability scanning.


```python
import socket
import requests
import nmap

# Function to scan open ports
def scan_ports(target, start_port=1, end_port=1024):
    open_ports = []
    print(f"Scanning ports on {target} from {start_port} to {end_port}...")
    for port in range(start_port, end_port+1):
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.settimeout(1)
        result = sock.connect_ex((target, port))
        if result == 0:
            print(f"Port {port} is open")
            open_ports.append(port)
        sock.close()
    return open_ports

# Function to check for outdated software via HTTP headers
def check_software_version(url):
    try:
        print(f"Checking software version for {url}...")
        response = requests.get(url)
        if 'Server' in response.headers:
            server = response.headers['Server']
            print(f"Server version: {server}")
        else:
            print("No 'Server' header found")
    except requests.exceptions.RequestException as e:
        print(f"Error connecting to {url}: {e}")

# Function to scan for vulnerabilities using nmap
def nmap_scan(target):
    nm = nmap.PortScanner()
    print(f"Running Nmap scan on {target}...")
    nm.scan(target, '1-1024')  # Scan ports from 1 to 1024
    for host in nm.all_hosts():
        print(f"Host: {host} ({nm[host].hostname()})")
        print(f"State: {nm[host].state()}")
        for proto in nm[host].all_protocols():
            print(f"Protocol: {proto}")
            lport = nm[host][proto].keys()
            for port in lport:
                print(f"Port: {port}, State: {nm[host][proto][port]['state']}")
    return nm

# Example usage
if __name__ == "__main__":
    target = input("Enter the target (IP or URL): ")
    # Perform port scan
    open_ports = scan_ports(target)
    
    # Check software version if URL is provided
    if target.startswith("http://") or target.startswith("https://"):
        check_software_version(target)
    
    # Run Nmap scan for more comprehensive vulnerability information
    nmap_results = nmap_scan(target)

### Example Scans:
1. **Port Scan**: This scans for open ports (from 1 to 1024 by default) on a target IP address or domain.
   ```bash
   $ python scan_tool.py
   Enter the target (IP or URL): example.com
   Scanning ports on example.com from 1 to 1024...
   Port 80 is open
   Port 443 is open
   ```

2. **Software Version Check**: This checks for a software version based on HTTP headers.
   ```bash
   $ python scan_tool.py
   Enter the target (IP or URL): http://example.com
   Checking software version for http://example.com...
   Server version: Apache/2.4.46
   ```

3. **Nmap Scan**: This performs a detailed scan of open ports and service information using Nmap.
   ```bash
   $ python scan_tool.py
   Enter the target (IP or URL): example.com
   Running Nmap scan on example.com...
   Host: example.com (example.com)
   State: up
   Protocol: tcp
   Port: 80, State: open
   Port: 443, State: open
   ``
